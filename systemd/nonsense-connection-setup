#!/usr/bin/env bash

set -exu

nonsensectl lock "${ENTITY}"

function raii() {
    nonsensectl unlock "${ENTITY}"
}

trap raii EXIT

uplink_netns=$(nonsensectl get "${ENTITY}" uplink-netns) || exit 0
ip link set "${DOWNLINK}" netns "${uplink_netns}"

if [[ "${ENTITY}" == net.* ]]
then
    downlink_address=$(nonsensectl get "${ENTITY}" downlink-address-masked)
    ip netns exec "${uplink_netns}" ip addr add "${downlink_address}" dev "${DOWNLINK}"

    network_address=$(nonsensectl get "${ENTITY}" network-address)

    uplink=$(nonsensectl get "${ENTITY}" uplink-entity)
    while true
    do
        if [[ "${ENTITY}" != net.* ]]
        then
            break
        fi

        uplink_uplink_netns=$(nonsensectl get "${uplink}" uplink-netns) || break
        uplink_uplink_address=$(nonsensectl get "${uplink}" uplink-address)
        ip netns exec "${uplink_uplink_netns}" ip route add "${network_address}" via "${uplink_uplink_address}"

        uplink=$(nonsensectl get "${uplink}" uplink-entity) || break
    done
else
    bridge=$(nonsensectl get "${ENTITY}" uplink-bridge)
    ip netns exec "${uplink_netns}" ip link set "${DOWNLINK}" master "${bridge}"
fi

ip netns exec "${uplink_netns}" ip link set "${DOWNLINK}" up

uplink_address=$(nonsensectl get "${ENTITY}" uplink-address-masked)
uplink_device=$(nonsensectl get "${ENTITY}" uplink-device)
ip addr add "${uplink_address}" dev "${uplink_device}"

gateway=$(nonsensectl get "${ENTITY}" downlink-address)
ip route add default via "${gateway}"

